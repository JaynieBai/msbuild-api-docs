<Type Name="InternalLoggerException" FullName="Microsoft.Build.Exceptions.InternalLoggerException">
  <TypeSignature Language="C#" Value="public sealed class InternalLoggerException : Exception" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;msbuild-17-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit InternalLoggerException extends System.Exception" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;msbuild-17-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Exceptions.InternalLoggerException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalLoggerException&#xA;Inherits Exception" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;msbuild-17-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
  <TypeSignature Language="F#" Value="type InternalLoggerException = class&#xA;    inherit Exception" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;msbuild-17-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalLoggerException sealed : Exception" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;msbuild-17-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
  <TypeSignature Language="C#" Value="public sealed class InternalLoggerException : Microsoft.Build.Framework.BuildException.BuildExceptionBase" FrameworkAlternate="msbuild-17" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit InternalLoggerException extends Microsoft.Build.Framework.BuildException.BuildExceptionBase" FrameworkAlternate="msbuild-17" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalLoggerException&#xA;Inherits BuildExceptionBase" FrameworkAlternate="msbuild-17" />
  <TypeSignature Language="F#" Value="type InternalLoggerException = class&#xA;    inherit BuildExceptionBase" FrameworkAlternate="msbuild-17" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalLoggerException sealed : Microsoft::Build::Framework::BuildException::BuildExceptionBase" FrameworkAlternate="msbuild-17" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="msbuild-17">Microsoft.Build.Framework.BuildException.BuildExceptionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This exception is used to wrap an unhandled exception from a logger. This exception aborts the build, and it can only be
            thrown by the MSBuild engine.
            </summary>
    <remarks>
            WARNING: marking a type [Serializable] without implementing ISerializable imposes a serialization contract -- it is a
            promise to never change the type's fields i.e. the type is immutable; adding new fields in the next version of the type
            without following certain special FX guidelines, can break both forward and backward compatibility
            </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates an instance of this exception using the specified error message.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalLoggerException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalLoggerException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Default constructor.
            </summary>
        <remarks>
            This constructor only exists to satisfy .NET coding guidelines. Use the rich constructor instead.
            </remarks>
        <exception cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalLoggerException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Exceptions.InternalLoggerException : string -&gt; Microsoft.Build.Exceptions.InternalLoggerException" Usage="new Microsoft.Build.Exceptions.InternalLoggerException message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalLoggerException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message" />
        <summary>
            Creates an instance of this exception using the specified error message.
            </summary>
        <remarks>
            This constructor only exists to satisfy .NET coding guidelines. Use the rich constructor instead.
            </remarks>
        <exception cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalLoggerException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Exceptions.InternalLoggerException : string * Exception -&gt; Microsoft.Build.Exceptions.InternalLoggerException" Usage="new Microsoft.Build.Exceptions.InternalLoggerException (message, innerException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalLoggerException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message" />
        <param name="innerException" />
        <summary>
            Creates an instance of this exception using the specified error message and inner exception.
            </summary>
        <remarks>
            This constructor only exists to satisfy .NET coding guidelines. Use the rich constructor instead.
            </remarks>
        <exception cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="BuildEventArgs">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.BuildEventArgs BuildEventArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.BuildEventArgs BuildEventArgs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InternalLoggerException.BuildEventArgs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildEventArgs As BuildEventArgs" />
      <MemberSignature Language="F#" Value="member this.BuildEventArgs : Microsoft.Build.Framework.BuildEventArgs" Usage="Microsoft.Build.Exceptions.InternalLoggerException.BuildEventArgs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::BuildEventArgs ^ BuildEventArgs { Microsoft::Build::Framework::BuildEventArgs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.BuildEventArgs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the details of the build event (if any) that was being logged.
            </summary>
        <value>The build event args, or null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCode">
      <MemberSignature Language="C#" Value="public string ErrorCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InternalLoggerException.ErrorCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCode As String" />
      <MemberSignature Language="F#" Value="member this.ErrorCode : string" Usage="Microsoft.Build.Exceptions.InternalLoggerException.ErrorCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the error code associated with this exception's message (not the inner exception).
            </summary>
        <value>The error code string.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushCustomState">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IDictionary&lt;string,string&gt; FlushCustomState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; FlushCustomState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.FlushCustomState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FlushCustomState () As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="override this.FlushCustomState : unit -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="internalLoggerException.FlushCustomState " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ FlushCustomState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="internalLoggerException.GetObjectData (info, context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info" />
        <param name="context" />
        <summary>
            ISerializable method which we must override since Exception implements this interface
            If we ever add new members to this class, we'll need to update this.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpKeyword">
      <MemberSignature Language="C#" Value="public string HelpKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InternalLoggerException.HelpKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpKeyword As String" />
      <MemberSignature Language="F#" Value="member this.HelpKeyword : string" Usage="Microsoft.Build.Exceptions.InternalLoggerException.HelpKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpKeyword { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the F1-help keyword associated with this error, for the host IDE.
            </summary>
        <value>The keyword string.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationException">
      <MemberSignature Language="C#" Value="public bool InitializationException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InitializationException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InternalLoggerException.InitializationException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitializationException As Boolean" />
      <MemberSignature Language="F#" Value="member this.InitializationException : bool" Usage="Microsoft.Build.Exceptions.InternalLoggerException.InitializationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InitializationException { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if the exception occurred during logger initialization
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCustomState">
      <MemberSignature Language="C#" Value="protected override void InitializeCustomState (System.Collections.Generic.IDictionary&lt;string,string&gt; state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeCustomState(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.InitializeCustomState(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeCustomState (state As IDictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="override this.InitializeCustomState : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="internalLoggerException.InitializeCustomState state" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeCustomState(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="msbuild-17" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
